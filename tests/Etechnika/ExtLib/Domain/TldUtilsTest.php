<?php

namespace Etechnika\ExtLib\Domain;


/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-22 at 17:54:10.
 */
class TldUtilsTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var TldUtils
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @param string  $strTld
     * @param boolean $booIntranet
     * @param boolean $booTrue
     *
     * @covers Etechnika\ExtLib\Domain\TldUtils::isValid
     * @dataProvider providerIsValid
     */
    public function testIsValid($strTld, $booIntranet, $booTrue)
    {
        if ($booTrue) {
            $this->assertTrue(TldUtils::isValid($strTld, $booIntranet), 'Tld name: '. $strTld .' intranet: '. var_export($booIntranet, true));
        } else {
            $this->assertFalse(TldUtils::isValid($strTld, $booIntranet), 'Tld name: '. $strTld .' intranet: '. var_export($booIntranet, true));
        }
    }

    /**
     * Data provider
     *
     * @return array
     */
    public function providerIsValid()
    {
        return array(
            array('.pl', false, true),
            array('pl', false, true),
            array('.com.pl', false, true),
            array('www.com.pl', false, false),
            array('', false, false),
            array(1, false, false),
            array('xn--0zwm56d', false, true),
            array('.xn--0zwm56d', false, true),
            array('.الاردن', false, false), // encoded .xn--mgbayh7gpa
            array('local', true, true),
            array('mynetwork', true, true),
            array('xn--0zwm56d', true, true),
            array('.الاردن', true, false), // encoded .xn--mgbayh7gpa
            array('xn--0zwm56d', false, true),
            array('xn--0zwm56d.pl', false, false),
            array('xn--0zwm56d.xn--0zwm56d', false, false),
            array('aaaa.xn--0zwm56d', false, false),
            array('aaaa.pl', false, false),
            array('xn--0zwm56d', true, true),
            array('xn--0zwm56d.pl', true, true),
            array('xn--0zwm56d.xn--0zwm56d', true, true),
            array('aaaa.xn--0zwm56d', true, true),
            array('aaaa.pl', true, true),
        );
    }

    /**
     * @param string $strTld
     * @param string $strResult
     *
     * @covers Etechnika\ExtLib\Domain\TldUtils::removeDot
     * @dataProvider providerRemoveDot
     */
    public function testRemoveDot($strTld, $strResult)
    {
        $this->assertEquals($strResult, TldUtils::removeDot($strTld), $strResult);
    }

    /**
     * Data provider
     *
     * @return array
     */
    public function providerRemoveDot()
    {
        return array(
            array('.pl', 'pl'),
            array('pl', 'pl'),
            array('.com.pl', 'com.pl'),
            array('www.com.pl', 'www.com.pl'),
            array('', ''),
        );
    }

    /**
     * @param string  $strTld
     * @param integer $intLevel
     *
     * @covers Etechnika\ExtLib\Domain\TldUtils::getLevel
     * @dataProvider providerGetLevel
     */
    public function testGetLevel($strTld, $intLevel)
    {
        $this->assertEquals($intLevel, TldUtils::getLevel($strTld));
    }

    /**
     * Data provider
     *
     * @return array
     */
    public function providerGetLevel()
    {
        return array(
            array('.pl', 1),
            array('pl', 1),
            array('.com.pl', 2),
            array('www.com.pl', 3),
            array('', 0),
        );
    }
}